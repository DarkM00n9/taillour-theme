{% liquid
# Some layout settings here. These aren't added as template settings, as they
# don't need to be.
assign thumbnail_width = 150
%}

<link rel="stylesheet" href="{{ 'cart.css' | asset_url }}">

<form action="{{ routes.cart_url }}" method="post">
  <div class="section-wrap">
    <section class="section">
      <h1 data-title="Cart">Cart</h1>
    </section>

    {% render 'cart-spend', section: section %}

    <section class="section">
      <div class="cart-items-header">
        <div>Product</div>
        <div>Quantity</div>
        <div>Total</div>
      </div>
      <div class="cart-items-group">
        {% liquid
        for item in cart.items
          render 'cart-item', item: item, thumbnail_width: thumbnail_width
        endfor
        %}
      </div>
      <div class="cart-items-footer">
        <div class="cart-items-footer__total flex">
          <span>{{ section.settings.cart_total_label }}</span>
          <strong class="large-text js--cart-total">{{ cart.total_price | money }}</strong>
        </div>
        <div class="cart-items-footer__note">
          {{ section.settings.checkout_note }}
        </div>
        <div>
          <button type="submit" name="checkout" class="button">
            {{ section.settings.checkout_btn_label }}
          </button>
          {%- if additional_checkout_buttons -%}
            <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
              {{ content_for_additional_checkout_buttons }}
            </div>
          {%- endif -%}
        </div>
      </div>
    </section>
  </div>
</form>

<script>
/*
* UPDATE ITEM QUANTITY
* Update the quantity for a cart line item.
*/
function updateLineItemQty(el) {
  let key = el.dataset.key;
  let id = el.dataset.id;
  let quantity = el.value;
  let row = el.closest('.js--cart-item');
  let data = {
    id: key,
    quantity: quantity
  };
  fetch('/cart/change.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data)
  })
  .then(response => response.json())
  .then(cart => {
    if (quantity > 0) {
      row.querySelectorAll('.js--cart-item-total').forEach(function(el) {
        // Get details of the updated item.
        let item = cart.items.filter(function(lineitem){
          if (lineitem.key === key) {
            return lineitem;
          }
        });
        el.innerText = moneyWithCurrency((item[0].final_line_price / 100));
      });
    } else {
      row.remove();
    }
    // Update the total cart price.
    document.querySelectorAll('.js--cart-total').forEach(function(el) {
      el.innerText = moneyWithCurrency(cart.total_price / 100);
    });
    if (typeof window.spendMore === "function") {
      spendMore(cart);
    }
  });
};
</script>

{% schema %}
{
  "name": "Cart",
  "tag": "section",
  "class": "cart-section",
  "disabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Spend more message"
    },
    {
      "type": "checkbox",
      "id": "enable_spend_more",
      "label": "Enable",
      "default": false
    },
    {
      "type": "number",
      "id": "spend_more_trigger",
      "label": "Trigger amount"
    },
    {
      "type": "richtext",
      "id": "spend_more_message",
      "label": "Message",
      "info": "Enter SPEND_AMT to insert balance amount.",
      "default": "<p>Spend <strong>SPEND_AMT</strong> to qualify for <strong>free delivery</strong>.</p>"
    },
    {
      "type": "header",
      "content": "Cart total"
    },
    {
      "type": "inline_richtext",
      "id": "cart_total_label",
      "label": "Cart total label",
      "default": "Estimated total"
    },
    {
      "type": "richtext",
      "id": "checkout_note",
      "label": "Checkout note",
      "default": "<p><em>Tax, shipping and discounts are calculated at checkout.</em></p>"
    },
    {
      "type": "text",
      "id": "checkout_btn_label",
      "label": "Checkout button label",
      "default": "Checkout"
    }
  ]
}
{% endschema %}
